// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int                  @id @default(autoincrement())
  username            String               @unique
  password            String
  name                String?
  ratings             Rating[]
  favoriteRecipes     FavoriteUserRecipe[]
  allergies           String[]
  nonLikedIngredients String[]
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
}

model FavoriteUserRecipe {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  recipe    Recipe   @relation(fields: [recipeId], references: [id])
  recipeId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Rating {
  id        Int      @id @default(autoincrement())
  notation  Int      @default(0)
  recipe    Recipe   @relation(fields: [recipeId], references: [id])
  recipeId  Int
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  comment   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ingredient {
  id                      Int                       @id @default(autoincrement())
  name                    String                    @unique
  IngredientsWithQuantity IngredientsWithQuantity[]
}

model Recipe {
  id                         Int                       @id @default(autoincrement())
  title                      String                    @unique
  searchTitle                String                    @unique
  description                String
  steps                      String[]
  ingredientsWithQuantity    IngredientsWithQuantity[]
  ingredientsWithQuantityIds Int[]
  favoriteByUsers            FavoriteUserRecipe[]
  ratings                    Rating[]
  imageUrl                   String                    @default("")
  createdAt                  DateTime                  @default(now())
  updatedAt                  DateTime                  @updatedAt
}

model IngredientsWithQuantity {
  id           Int        @id @default(autoincrement())
  quantity     String
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  ingredientId Int
  recipe       Recipe?    @relation(fields: [recipeId], references: [id])
  recipeId     Int?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}
